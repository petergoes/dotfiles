#!/bin/bash

has() {
  command -v "$1" 1>/dev/null 2>&1
}

brew_installed() {
    cellar=$(brew --cellar)
    if [ ! -f "$cellar/$1" ]; then
        return 0
    else
        return 1
    fi
}

PACKAGE_MANAGER=
INSTALL=
UPDATE=
CELLAR=

PLATFORM="$(uname -s | tr '[:upper:]' '[:lower:]')"

if [[ "$PLATFORM" == "darwin" ]]; then
    PACKAGE_MANAGER="brew"
    INSTALL="install"
    UPDATE="upgrade"
    CELLAR=$(brew --cellar)
else
    PACKAGE_MANAGER="apt"
    INSTALL="install -y"
    UPDATE="update"
fi

installHomebrew() {
    if ! has brew; then
        echo
        echo "Install Homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    else
        echo "Homebrew already installed"
        brew update
    fi
}

installCliTools() {
    echo
    echo "Install Cli Tools with $PACKAGE_MANAGER"

    while read tool; do
        IFS=' '; VALUE=($tool); unset IFS;
        IFS=','; TOOL=(${VALUE[0]}); unset IFS;

        if [ -z ${TOOL[1]+x} ]; then
            BIN_NAME=${TOOL[0]};
        else
            BIN_NAME=${TOOL[1]}
        fi

        echo
        if [ -z ${VALUE[1]+x} ]; then
            if has ${BIN_NAME}; then
                # Force tools to be installed via homebrew on macos
                # git comes preinstalled, but we want the homebrew version
                if [ $PLATFORM == 'darwin' ] && ! brew_installed ${BIN_NAME}; then
                    echo "Install ${TOOL[0]}"
                    $PACKAGE_MANAGER $INSTALL ${TOOL[0]}
                else
                    echo "Updating ${TOOL[0]}"
                    $PACKAGE_MANAGER $UPDATE ${TOOL[0]}
                fi
            else
                echo "Install ${TOOL[0]}"
                $PACKAGE_MANAGER $INSTALL ${TOOL[0]}
            fi
        else
            if ! has ${BIN_NAME}; then
                echo "Install ${TOOL[0]}"
                curl -sS ${VALUE[1]} | sh -s -- -y
            fi
        fi
    done < ./script/cli-tools
}

installCasks() {
    echo
    echo "Install Casks"

    while read cask; do
        IFS=' '; VALUE=($cask); unset IFS;

        echo
        if ! brew info $cask &>/dev/null; then
            echo "Install $cask"
            $PACKAGE_MANAGER $INSTALL --cask $cask
        else
            echo "Updating $cask"
            brew upgrade $cask
        fi
    done < ./script/casks
}

installZshPlugin() {
	name=$1
	branch=$2
	repo=$3

	if test -d "./zsh/.config/plugins/$name"; then
		echo "Add zsh plugin $name"
		git remote add -f $name $repo
		git subtree add --prefix zsh/.config/zsh/plugins/$name $name $branch --squash
	else
		echo "Update zsh plugin $name"
		git fetch $name $branch
		git subtree pull --prefix zsh/.config/zsh/plugins/$name $name $branch --squash
	fi
}
